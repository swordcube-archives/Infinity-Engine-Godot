[gd_scene load_steps=24 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]
[ext_resource path="res://Assets/Songs/test/the man.gd" type="Script" id=2]
[ext_resource path="res://Assets/Images/UI/dvd icon.png" type="Texture" id=3]
[ext_resource path="res://Assets/Songs/test/Player.gd" type="Script" id=4]
[ext_resource path="res://Assets/Images/Icons/bf-prototype-icons.png" type="Texture" id=5]

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;

uniform float uSpeed;
uniform float uFrequency;
uniform float uWaveAmplitude;

void fragment() {
	vec2 good_uv = UV;
	good_uv = good_uv + vec2(
		sin(good_uv.y * uFrequency + TIME * uSpeed) * (uWaveAmplitude / good_uv.x * good_uv.y),
		sin(good_uv.x * uFrequency - TIME * uSpeed) * (uWaveAmplitude / good_uv.y * good_uv.x)
	);
	
	COLOR = texture(TEXTURE, good_uv);
}"

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )
shader_param/uSpeed = 5.0
shader_param/uFrequency = 15.0
shader_param/uWaveAmplitude = 0.5

[sub_resource type="Shader" id=10]
code = "shader_type canvas_item;

varying float openfl_Alphav;
varying vec4 openfl_ColorMultiplierv;
varying vec4 openfl_ColorOffsetv;
varying vec2 openfl_TextureCoordv;

uniform bool openfl_HasColorTransform;
uniform vec2 openfl_TextureSize;

uniform bool hasTransform;
uniform bool hasColorTransform;

vec4 flixel_texture2D(sampler2D bitmap, vec2 coord)
{
	vec4 color = texture(bitmap, coord);
	
	if (!hasTransform)
	{
		return color;
	}

	if (color.a == 0.0)
	{
		return vec4(0.0, 0.0, 0.0, 0.0);
	}

	if (!hasColorTransform)
	{
		return color * openfl_Alphav;
	}

	color = vec4(color.rgb / color.a, color.a);

	mat4 colorMultiplier = mat4(0);
	colorMultiplier[0][0] = openfl_ColorMultiplierv.x;
	colorMultiplier[1][1] = openfl_ColorMultiplierv.y;
	colorMultiplier[2][2] = openfl_ColorMultiplierv.z;
	colorMultiplier[3][3] = openfl_ColorMultiplierv.w;

	color = clamp(openfl_ColorOffsetv + (color * colorMultiplier), 0.0, 1.0);

	if (color.a > 0.0)
	{
		return vec4(color.rgb * color.a * openfl_Alphav, color.a * openfl_Alphav);
	}
	return vec4(0.0, 0.0, 0.0, 0.0);
}

uniform float uTime;
uniform float money;
uniform bool awesomeOutline;

const float offset = 1.0 / 128.0;

vec3 normalizeColor(vec3 color)
{
	return vec3(
		color[0] / 255.0,
		color[1] / 255.0,
		color[2] / 255.0
	);
}

vec3 rgb2hsv(vec3 c)
{
	vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
	vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
	vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));

	float d = q.x - min(q.w, q.y);
	float e = 1.0e-10;
	return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
}

vec3 hsv2rgb(vec3 c)
{
	vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
	vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
	return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}

void fragment() {
	vec4 color = flixel_texture2D(SCREEN_TEXTURE, SCREEN_UV);
	vec4 swagColor = vec4(rgb2hsv(vec3(color[0], color[1], color[2])), color[3]);
	
	// [0] is the hue???
	swagColor[0] += uTime;
	// swagColor[1] += uTime;
	// money += swagColor[0];
	color = vec4(hsv2rgb(vec3(swagColor[0], swagColor[1], swagColor[2])), swagColor[3]);
	
	if (awesomeOutline)
	{
		// Outline bullshit?
		vec2 size = vec2(3, 3);

		if (color.a <= 0.5) {
			float w = size.x / openfl_TextureSize.x;
			float h = size.y / openfl_TextureSize.y;
			
			if (flixel_texture2D(TEXTURE, vec2(UV.x + w, UV.y)).a != 0.
			|| flixel_texture2D(TEXTURE, vec2(UV.x - w, UV.y)).a != 0.
			|| flixel_texture2D(TEXTURE, vec2(UV.x, UV.y + h)).a != 0.
			|| flixel_texture2D(TEXTURE, vec2(UV.x, UV.y - h)).a != 0.)
				color = vec4(1.0, 1.0, 1.0, 1.0);
		}
	}
	
	COLOR = color;
}"

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 10 )
shader_param/openfl_HasColorTransform = false
shader_param/openfl_TextureSize = Vector2( 0, 0 )
shader_param/hasTransform = false
shader_param/hasColorTransform = false
shader_param/uTime = 0.0
shader_param/money = 0.0
shader_param/awesomeOutline = false

[sub_resource type="Shader" id=23]
code = "shader_type canvas_item;

uniform float strength: hint_range(0.0, 0.1, 0.001) = 0.08;
uniform vec2 center = vec2(0.5, 0.5);
uniform float abberation: hint_range(0.0, 1.0, 0.001) = 0.425;

uniform float radius: hint_range(0.0, 10.0, 0.01) = 1.0;
uniform float width: hint_range(0.0, 10.0, 0.01) = 0.04;
uniform float feather: hint_range(0.0, 1.0, 0.001) = 0.135;

void fragment() {
	vec2 st = SCREEN_UV;
	float aspect_ratio = SCREEN_PIXEL_SIZE.y/SCREEN_PIXEL_SIZE.x;
	vec2 scaled_st = (st -vec2(0.0, 0.5)) / vec2(1.0, aspect_ratio) + vec2(0,0.5); 
	
	vec3 color = vec3(st.xy, 0);
	vec2 dist_center = scaled_st - center;
	float mask =  (1.0 - smoothstep(radius-feather, radius, length(dist_center))) * smoothstep(radius - width - feather, radius-width , length(dist_center));
	vec2 offset = normalize(dist_center)*strength*mask;
	vec2 biased_st = scaled_st - offset;
	
	vec2 abber_vec = offset*abberation*mask;
	
	vec2 final_st = st*(1.0-mask) + biased_st*mask;

	vec4 red = texture(SCREEN_TEXTURE, final_st + abber_vec);
	vec4 blue = texture(SCREEN_TEXTURE, final_st - abber_vec);
	vec4 ori = texture(SCREEN_TEXTURE, final_st);
	color = vec3(red.r, ori.g, blue.b);
	COLOR = vec4(color, 1.0);
}"

[sub_resource type="ShaderMaterial" id=24]
shader = SubResource( 23 )
shader_param/strength = 0.1
shader_param/center = Vector2( 0.5, 0.5 )
shader_param/abberation = 0.765
shader_param/radius = 0.39
shader_param/width = 0.26
shader_param/feather = 1.0

[sub_resource type="Shader" id=11]
code = "shader_type canvas_item;

uniform int pixelSize = 4;

void fragment()
{
	ivec2 size = textureSize(SCREEN_TEXTURE, 0);
	
	int xRes = size.x;
	int yRes = size.y;
	
	float xFactor = float(xRes) / float(pixelSize);
	float yFactor = float(yRes) / float(pixelSize);
	
	float grid_uv_x = round(SCREEN_UV.x * xFactor) / xFactor;
	float grid_uv_y = round(SCREEN_UV.y * yFactor) / yFactor;
	
	vec4 text = texture(SCREEN_TEXTURE, vec2(grid_uv_x, grid_uv_y));
	
	COLOR = text;
}"

[sub_resource type="ShaderMaterial" id=12]
shader = SubResource( 11 )
shader_param/pixelSize = 4

[sub_resource type="CapsuleShape2D" id=13]
radius = 66.0
height = 140.0

[sub_resource type="Curve" id=14]
min_value = -360.0
max_value = 360.0
_data = [ Vector2( 0, 1 ), 0.0, 0.0, 0, 0, Vector2( 1, -360 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=15]
curve = SubResource( 14 )

[sub_resource type="Curve" id=16]
min_value = -360.0
max_value = 360.0
_data = [ Vector2( 0, 360 ), 0.0, 0.0, 0, 0, Vector2( 1, -360 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=17]
curve = SubResource( 16 )

[sub_resource type="Gradient" id=18]
offsets = PoolRealArray( 0, 0.826087, 1 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 0.576471, 0, 0, 0, 0 )

[sub_resource type="GradientTexture" id=19]
gradient = SubResource( 18 )

[sub_resource type="Curve" id=20]
_data = [ Vector2( 0, 1 ), 0.0, 1.03965, 0, 0, Vector2( 1, 0 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=21]
curve = SubResource( 20 )

[sub_resource type="ParticlesMaterial" id=22]
lifetime_randomness = 0.5
flag_disable_z = true
direction = Vector3( 1, 1, 1 )
spread = 180.0
gravity = Vector3( 0, 150, 0 )
initial_velocity = 862.74
initial_velocity_random = 1.0
angular_velocity = 155.29
angular_velocity_random = 1.0
angular_velocity_curve = SubResource( 17 )
orbit_velocity = 0.0
orbit_velocity_random = 1.0
angle = 720.0
angle_random = 1.0
angle_curve = SubResource( 15 )
scale_random = 1.0
scale_curve = SubResource( 21 )
color_ramp = SubResource( 19 )

[node name="the man" type="CanvasLayer"]
pause_mode = 2
script = ExtResource( 2 )

[node name="Sprite" type="Sprite" parent="."]
modulate = Color( 1, 1, 1, 0.5 )
material = SubResource( 8 )
position = Vector2( 640, 360 )
scale = Vector2( 20, 11.25 )
texture = ExtResource( 1 )

[node name="RichTextLabel" type="RichTextLabel" parent="Sprite"]
margin_left = -32.0
margin_top = -32.0
margin_right = 32.0
margin_bottom = 32.0
bbcode_enabled = true
bbcode_text = "[rainbow freq=0.5 sat=0.8 val=2][wave amp=100 freq=3]
GODOT IS GREAT[/wave][/rainbow]"
text = "
GODOT IS GREAT"

[node name="Hue" type="Sprite" parent="."]
visible = false
material = SubResource( 9 )
scale = Vector2( 20, 11.25 )
texture = ExtResource( 1 )
centered = false

[node name="Distort" type="Sprite" parent="."]
material = SubResource( 24 )
position = Vector2( 4, 0 )
scale = Vector2( 20, 11.25 )
texture = ExtResource( 1 )
centered = false

[node name="Pixelate" type="Sprite" parent="."]
visible = false
material = SubResource( 12 )
scale = Vector2( 20, 11.25 )
texture = ExtResource( 1 )
centered = false

[node name="DVD" type="KinematicBody2D" parent="."]
position = Vector2( 624, 350 )
script = ExtResource( 4 )

[node name="Sprite" type="Sprite" parent="DVD"]
position = Vector2( -11, 0 )
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 3 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="DVD"]
position = Vector2( -10, 0 )
rotation = 1.5708
shape = SubResource( 13 )

[node name="Particles2D" type="Particles2D" parent="DVD"]
scale = Vector2( 0.5, 0.5 )
process_material = SubResource( 22 )
texture = ExtResource( 5 )

[node name="DVD2" type="KinematicBody2D" parent="."]
position = Vector2( 234, 554 )
script = ExtResource( 4 )

[node name="Sprite" type="Sprite" parent="DVD2"]
position = Vector2( -11, 0 )
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 3 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="DVD2"]
position = Vector2( -10, 0 )
rotation = 1.5708
shape = SubResource( 13 )

[node name="Particles2D" type="Particles2D" parent="DVD2"]
scale = Vector2( 0.5, 0.5 )
process_material = SubResource( 22 )
texture = ExtResource( 5 )

[node name="DVD3" type="KinematicBody2D" parent="."]
position = Vector2( 984, 146 )
script = ExtResource( 4 )

[node name="Sprite" type="Sprite" parent="DVD3"]
position = Vector2( -11, 0 )
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 3 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="DVD3"]
position = Vector2( -10, 0 )
rotation = 1.5708
shape = SubResource( 13 )

[node name="Particles2D" type="Particles2D" parent="DVD3"]
scale = Vector2( 0.5, 0.5 )
process_material = SubResource( 22 )
texture = ExtResource( 5 )

[node name="DVD4" type="KinematicBody2D" parent="."]
position = Vector2( 202, 126 )
script = ExtResource( 4 )

[node name="Sprite" type="Sprite" parent="DVD4"]
position = Vector2( -11, 0 )
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 3 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="DVD4"]
position = Vector2( -10, 0 )
rotation = 1.5708
shape = SubResource( 13 )

[node name="Particles2D" type="Particles2D" parent="DVD4"]
scale = Vector2( 0.5, 0.5 )
process_material = SubResource( 22 )
texture = ExtResource( 5 )

[node name="DVD5" type="KinematicBody2D" parent="."]
position = Vector2( 1006, 556 )
script = ExtResource( 4 )

[node name="Sprite" type="Sprite" parent="DVD5"]
position = Vector2( -11, 0 )
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 3 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="DVD5"]
position = Vector2( -10, 0 )
rotation = 1.5708
shape = SubResource( 13 )

[node name="Particles2D" type="Particles2D" parent="DVD5"]
scale = Vector2( 0.5, 0.5 )
process_material = SubResource( 22 )
texture = ExtResource( 5 )
